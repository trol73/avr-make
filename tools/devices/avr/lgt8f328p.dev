device {
	name = "LGT8F328P"
	prog_size = 0x8000
	eeprom_size = 0x0400
	ram_size = 0x0800
	ram_start = 0x0100
}

interrupts {
	RESET = 0x00            ; External Pin, Power-on Reset, Brown-out Reset and Watchdog Reset
	INT0 = 0x01             ; External Interrupt Request 0
	INT1 = 0x02             ; External Interrupt Request 1
	PCINT0 = 0x03           ; Pin Change Interrupt Request 0
	PCINT1 = 0x04           ; Pin Change Interrupt Request 1
	PCINT2 = 0x05           ; Pin Change Interrupt Request 2
	WDT = 0x06              ; Watchdog Time-out Interrupt
	TIMER2_COMPA = 0x07     ; Timer/Counter2 Compare Match A
	TIMER2_COMPB = 0x08     ; Timer/Counter2 Compare Match B
	TIMER2_OVF = 0x09       ; Timer/Counter2 Overflow
	TIMER1_CAPT = 0x0a      ; Timer/Counter1 Capture Event
	TIMER1_COMPA = 0x0b     ; Timer/Counter1 Compare Match A
	TIMER1_COMPB = 0x0c     ; Timer/Counter1 Compare Match B
	TIMER1_OVF = 0x0d       ; Timer/Counter1 Overflow
	TIMER0_COMPA = 0x0e     ; TimerCounter0 Compare Match A
	TIMER0_COMPB = 0x0f     ; TimerCounter0 Compare Match B
	TIMER0_OVF = 0x10       ; Timer/Couner0 Overflow
	SPI_STC = 0x11          ; SPI Serial Transfer Complete
	USART_RX = 0x12         ; USART Rx Complete
	USART_UDRE = 0x13       ; USART, Data Register Empty
	USART_TX = 0x14         ; USART Tx Complete
	ADC = 0x15              ; ADC Conversion Complete
	EE_READY = 0x16         ; EEPROM Ready
	ANALOG_COMP = 0x17      ; Analog Comparator
	TWI = 0x18              ; Two-wire Serial Interface
	SPM_Ready = 0x19        ; Store Program Memory Read


	; LGT8F328P

	ANALOG_COMP1 = 0x19      ; Analog Comparator
	; reserved 0x1a
	PCINT3 = 0x1b           ; Pin Change Interrupt Request 3
	PCINT4 = 0x1c           ; Pin Change Interrupt Request 4
	TC3INT = 0x1d           ; Timer 3
}

registers {
	DSCR(0x00) {            ; (0x20) Arithmetic accelerator (uDSC) Control Status Register 
		DSC = 0	             ; 32 Adder carry/borrow
		DSZ = 1                ; Arithmetic result is zero flag
		DSN = 2                ; Arithmetic result is minus flag
		D0 = 4                 ; Division arithmetic by zero flag
		D1 = 5                 ; Division arithmetic, 1=done
		MM = 6                 ; uDSC register mapping mode, for details referring to introduction on 16-bit working mode
		DSUEN = 7              ; uDSC module enable control: 1= enable, 0=disable
	}
	DSIR(0x01)              ; (0x21) Instruction regiter of uDSC
	DSSD(0x02)              ; (0x22) DSSD access port of uDSC
	PINB(0x03)              ; Port B Input Pins
	DDRB(0x04)              ; Port B Data Direction Register
	PORTB(0x05)             ; Port B Data Register
	PINC(0x06)              ; Port C Input Pins
	DDRC(0x07)              ; Port C Data Direction Register
	PORTC(0x08)             ; Port C Data Register
	PIND(0x09)              ; Port D Input Pins
	DDRD(0x0a)              ; Port D Data Direction Register
	PORTD(0x0b)             ; Port D Data Register
	PINE(0x0c)              ; (0x2c) Port Input of Group E
	DDRE(0x0d)              ; (0x2d) Data Direction of Group F
	PORTE(0x0e)             ; (0x2e) Port Output of Group E
	C1SR(0x0f) {            ; AC1 Control and status registers ??????  (0x2f) DSDX access port of uDSC !!!!!!! TODO
		C1IS0 = 0	           ; Analog comparator interrupt mode control low
		C1IS1 = 1	           ; Analog comparator interrupt mode control high
		C1IC = 2             ; Analog comparator input capture enable bit
		C1IE = 3             ; Analog comparator interrupt enable bit
		C1I = 4              ; Analog comparator interrupt flag
		C1O = 5              ; Output status bit of analog comparator
		C1BG = 6             ; Analog comparator 1 positive input source selection bit.
		C1D = 7              ; Analog comparator disable
	}
	DSDX(0x10)              ; (0x30) DSDX access port of uDSC     !!!!!!!! TODO
	DSDY(0x11)              ; (0x31) DSDY access port of uDSC
	PINF(0x12)              ; (0x32) Port Input of Group F
	DDRF(0x13)              ; (0x33) Data Direction of Group F
	PORTF(0x14)             ; (0x34) Port Output of Group F
	
	TIFR0(0x15) {           ; Timer/Counter0 Interrupt Flag register
		TOV0 = 0                ; Timer/Counter0 Overflow Flag
		OCF0A = 1               ; Timer/Counter0 Output Compare Flag 0A
		OCF0B = 2               ; Timer/Counter0 Output Compare Flag 0B
	}
	TIFR1(0x16) {           ; Timer/Counter Interrupt Flag register
		TOV1 = 0                ; Timer/Counter1 Overflow Flag
		OCF1A = 1               ; Output Compare Flag 1A
		OCF1B = 2               ; Output Compare Flag 1B
		ICF1 = 5                ; Input Capture Flag 1
	}
	TIFR2(0x17) {           ; Timer/Counter Interrupt Flag Register
		TOV2 = 0                ; Timer/Counter2 Overflow Flag
		OCF2A = 1               ; Output Compare Flag 2A
		OCF2B = 2               ; Output Compare Flag 2B
	}
	TIFR3(0x18) {           ; (0x38) TC3 Interrupt Flag Register
		TOV3 = 0              ; Overflow flag bit
		OCF3A = 1             ; Output compare A match flag bit
		OCF3B = 2             ; Output compare B match flag bit
		OCF3C = 3             ; Output compare C match flag bit
		ICF3 = 5              ; Input capture flag bit
	}
	
	SPFR(0x19) {            ; (0x39) SPI Buffer 
		WRPTR0 = 0              ; Send buffer address low
		WRPTR1 = 1              ; Send buffer address high
		WREMPT = 2              ; Send buffer empty flag bit
		WRFULL = 3              ; Send buffer full flag bit
		RDPTR0 = 4              ; Receive buffer address low
		RDPTR1 = 5              ; Receive buffer address high
		RDEMPT = 6              ; Receive buffer empty flag bit
		RDFULL = 7              ; Receive buffer full flag bit
	}
	C1XR(0x1a) {            ; (0x3A) AC1 Auxiliary Control Register	!!!!! TODO address?
		C1FS0 = 0            ; Comparator digital filter width configuration
		C1FS1 = 1            ; Comparator digital filter width configuration
		C1FEN = 2            ; Comparator digital filter enable control
		C1WKE = 3            ; AC1 is used to enable sleep wake up
		C1PS0 = 4            ; AC1 negative input source selection LOW
		C1HYSE = 5           ; AC1 output delay enable control
		C1OE	= 6             ; AC1 comparator output to external port enable control
	}
	PCIFR(0x1b) {           ; Pin Change Interrupt Flag Register
		PCIF0 = 0               ; Pin Change Interrupt Flags bit 0
		PCIF1 = 1               ; Pin Change Interrupt Flags bit 1
		PCIF2 = 2               ; Pin Change Interrupt Flags bit 2
	}
	EIFR(0x1c) {            ; External Interrupt Flag Register
		INTF0 = 0               ; External Interrupt Flags bit 0
		INTF1 = 1               ; External Interrupt Flags bit 1
	}
	EIMSK(0x1d) {           ; External Interrupt Mask Register
		INT0 = 0                ; External Interrupt Request 1 Enable bit 0
		INT1 = 1                ; External Interrupt Request 1 Enable bit 1
	}
	GPIOR0(0x1e)            ; General Purpose I/O Register 0
	EECR(0x1f) {            ; EEPROM Control Register
		EERE = 0                ; EEPROM Read Enable
		EEPE = 1                ; EEPROM Write Enable
		EEMPE = 2               ; EEPROM Master Write Enable
		EERIE = 3               ; EEPROM Ready Interrupt Enable
		EEPM0 = 4               ; EEPROM Programming Mode Bits bit 0
		EEPM1 = 5               ; EEPROM Programming Mode Bits bit 1
	}
	EEDR(0x20)              ; EEPROM Data Register
	EEAR(0x21, 0x22)        ; EEPROM Address Register  Bytes
	GTCCR(0x23) {           ; General Timer/Counter Control Register
		PSRSYNC = 0             ; Prescaler Reset Timer/Counter1 and Timer/Counter0
		PSRASY = 1              ; Prescaler Reset Timer/Counter2
		TSM = 7                 ; Timer/Counter Synchronization Mode
	}
	TCCR0A(0x24) {          ; Timer/Counter  Control Register A
		WGM00 = 0               ; Waveform Generation Mode bit 0
		WGM01 = 1               ; Waveform Generation Mode bit 1
		COM0B0 = 4              ; Compare Output Mode, Fast PWm bit 0
		COM0B1 = 5              ; Compare Output Mode, Fast PWm bit 1
		COM0A0 = 6              ; Compare Output Mode, Phase Correct PWM Mode bit 0
		COM0A1 = 7              ; Compare Output Mode, Phase Correct PWM Mode bit 1
	}
	TCCR0B(0x25) {          ; Timer/Counter Control Register B
		CS00 = 0                ; Clock Select bit 0
		CS01 = 1                ; Clock Select bit 1
		CS02 = 2                ; Clock Select bit 2
		WGM02 = 3               ; 
		FOC0B = 6               ; Force Output Compare B
		FOC0A = 7               ; Force Output Compare A
	}
	TCNT0(0x26)             ; Timer/Counter0
	OCR0A(0x27)             ; Timer/Counter0 Output Compare Register
	OCR0B(0x28)             ; Timer/Counter0 Output Compare Register
	TCCR0C(0x29) {          ; (0x49) TC0 Control register C
		DSX00 = 0	
		DSX01 = 1	
		DSX04 = 4	
		DSX05 = 5	
		DSX06 = 6	
		DSX07 = 7	
	}
	GPIOR1(0x2a)            ; General Purpose I/O Register 1
	GPIOR2(0x2b)            ; General Purpose I/O Register 2
	SPCR(0x2c) {            ; SPI Control Register
		SPR0 = 0                ; SPI Clock Rate Selects bit 0
		SPR1 = 1                ; SPI Clock Rate Selects bit 1
		CPHA = 2                ; Clock Phase
		CPOL = 3                ; Clock polarity
		MSTR = 4                ; Master/Slave Select
		DORD = 5                ; Data Order
		SPE = 6                 ; SPI Enable
		SPIE = 7                ; SPI Interrupt Enable
	}
	SPSR(0x2d) {            ; (0x4D) SPI Status Register
		SPI2X = 0               ; Double SPI Speed Bit
		DUAL = 2                ; 2-Wire control bit. Enable SPI 2-wire transmission mode (in master mode, MISO and MOSI are used as master data input, regarding data transmission mode, refer to sections of master 2-wire receive and data mode)
		WCOL = 6                ; Write Collision Flag
		SPIF = 7                ; SPI Interrupt Flag
	}
	SPDR(0x2e)              ; (0x4E) SPI Data Register
	DTR0(0x2F)              ; (0x4F) TC0 Dead-band timing control register
	ACSR(0x30) {            ; Analog Comparator Control And Status Register
		ACIS0 = 0               ; Analog Comparator Interrupt Mode Select bits bit 0
		ACIS1 = 1               ; Analog Comparator Interrupt Mode Select bits bit 1
		ACIC = 2                ; Analog Comparator Input Capture Enable
		ACIE = 3                ; Analog Comparator Interrupt Enable
		ACI = 4                 ; Analog Comparator Interrupt Flag
		ACO = 5                 ; Analog Compare Output
		ACBG = 6                ; Analog Comparator Bandgap Select
		ACD = 7                 ; Analog Comparator Disable
	}
	C0XR(0x31) {            ; (0x51) AC0 Auxiliary Control Register
		C0FS0 = 0               ; Comparator digital filter width configuration
		C0FS1 = 1               ; Comparator digital filter width configuration
		C0FEN = 2               ; Comparator digital filter enable control
		C0WKE = 3               ; AC0 is used to enable sleep wake up
		C0PS0 = 4               ; AC0 negative input source selection LOW
		C0HYSE = 5              ; AC0 output delay enable control
		C0OE	= 6                ; AC0 comparator output to external port enable control
	}
	C0TR(0x32)              ; (0x52) AC0 Trimming register

	SMCR(0x33) {            ; Sleep Mode Control Register
		SE = 0                  ; Sleep Enable
		SM0 = 1                 ; Sleep Mode Select Bits bit 0
		SM1 = 2                 ; Sleep Mode Select Bits bit 1
		SM2 = 3                 ; Sleep Mode Select Bits bit 2
	}
	MCUSR(0x34) {           ; MCU Status Register
		PORF = 0                ; Power-on reset flag
		EXTRF = 1               ; External Reset Flag
		BORF = 2                ; Brown-out Reset Flag
		WDRF = 3                ; Watchdog Reset Flag
	}
	MCUCR(0x35) {           ; MCU Control Register
		IVCE = 0                ; 
		IVSEL = 1               ; 
		PUD = 4                 ; 
		BODSE = 5               ; BOD Sleep Enable
		BODS = 6                ; BOD Sleep
	}
	ECCR(0x36) {            ; (0x56) FLASH Mode Control Register 
		ECS0 = 0	             ; E2PROM memory configuration
		ECS1 = 1               ; E2PROM memory configuration
		CP0 = 2                ; Page SWAP CP1 Enable control
		CP1 = 3                ; Page SWAP CP1 Enable control
		SWM = 4                ; Continuous write mode, only suitable to analog E2PROM controller operation
		ERN = 5                ; Write 1 to reset E2PCTL controller
		EEN = 6                ; E2PROM enable, only is valid for LGT8F328P
		WEN = 7                ; ECR write enable control (Before modify ECCR, must write WEN as 1, than within 6ycles, UPDATE ECCR register)
	}
	E2PD2(0x37)             ; (0x57) E2PCTL Data register byte 2
	DSAL(0x38)              ; (0x58) DSA[15:0] access port of uDSC
	DSAH(0x39)              ; (0x59) DSA[31:16] access port of uDSC
	E2PD1(0x3a)             ; (0x5A) E2PCTL Data register byte 1
	C1TR(0x3b)              ; (0x5B) AC1 trimming data
	E2PD3(0x3c)             ; (0x5C) E2PCTL Data register byte 3
	SP(0x3d, 0x3e)          ; Stack Pointer 
	SREG(0x3f) {            ; Status Register
		C = 0                   ; Carry Flag
		Z = 1                   ; Zero Flag
		N = 2                   ; Negative Flag
		V = 3                   ; Two's Complement Overflow Flag
		S = 4                   ; Sign Bit
		H = 5                   ; Half Carry Flag
		T = 6                   ; Bit Copy Storage
		I = 7                   ; Global Interrupt Enable
	}
	WDTCSR(0x60) {          ; Watchdog Timer Control Register
		WDP0 = 0                ; Watchdog Timer Prescaler Bits bit 0
		WDP1 = 1                ; Watchdog Timer Prescaler Bits bit 1
		WDP2 = 2                ; Watchdog Timer Prescaler Bits bit 2
		WDE = 3                 ; Watch Dog Enable
		WDCE = 4                ; Watchdog Change Enable
		WDP3 = 5                ; Watchdog Timer Prescaler Bits bit 3
		WDIE = 6                ; Watchdog Timeout Interrupt Enable
		WDIF = 7                ; Watchdog Timeout Interrupt Flag
	}
	CLKPR(0x61) {           ; Clock Prescale Register
		CLKPS0 = 0              ; Clock Prescaler Select Bits bit 0
		CLKPS1 = 1              ; Clock Prescaler Select Bits bit 1
		CLKPS2 = 2              ; Clock Prescaler Select Bits bit 2
		CLKPS3 = 3              ; Clock Prescaler Select Bits bit 3
		CKOEN0 = 5              ; To set if system clock is output from PBO pin
		CKOEN1 = 6              ; To set if system clock is output from PE5 pin
		CLKPCE = 7              ; Clock Prescaler Change Enable
	}
	VDTCR(0x62) {           ; Low voltage detection (LVD) Control Register 
		VDTEN = 0	              ; LVD module enable control, write one to enable, 0 to disable
		VDREN = 1               ; LVD Reset enable control, write one to enable, 0 to disable
		VDTS0 = 2	              ; Low voltage testing threshold configuration bit
		VDTS1 = 3               ; Low voltage testing threshold configuration bit
		VDTS2 = 4               ; Low voltage testing threshold configuration bit
		SWR = 6                 ; Software reset enable bit, clear this bit to generate software reset
		WCE = 7                 ; VDTCR Value Change Enable Bit
	}
	PRR(0x64) {             ; Power Reduction Register
		PRADC = 0               ; Power Reduction ADC
		PRUSART0 = 1            ; Power Reduction USART
		PRSPI = 2               ; Power Reduction Serial Peripheral Interface
		PRTIM1 = 3              ; Power Reduction Timer/Counter1
		PRTIM0 = 5              ; Power Reduction Timer/Counter0
		PRTIM2 = 6              ; Power Reduction Timer/Counter2
		PRTWI = 7               ; Power Reduction TWI
	}
	PRR1(0x65) {            ; Power control register 1
		PRPCI	= 1           ; Write to logic one, shut down external pin change and clock to external interrupt module
		PREFL	= 2           ; Write to logic one, shut down clock to FLASH controller interface
		PRTIM3	= 3           ; Write to logic one, shut down clock to TIM3 controller
		PRWDT	= 5           ; Write to logic one, shut down clock to WDT Counter
	}
	OSCCAL(0x66) {          ; Oscillator Calibration Value
		OSCCAL0 = 0             ; Oscillator Calibration  bit 0
		OSCCAL1 = 1             ; Oscillator Calibration  bit 1
		OSCCAL2 = 2             ; Oscillator Calibration  bit 2
		OSCCAL3 = 3             ; Oscillator Calibration  bit 3
		OSCCAL4 = 4             ; Oscillator Calibration  bit 4
		OSCCAL5 = 5             ; Oscillator Calibration  bit 5
		OSCCAL6 = 6             ; Oscillator Calibration  bit 6
		OSCCAL7 = 7             ; Oscillator Calibration  bit 7
	}
	RCKCAL(0x67)            ; RC32K Calibration
	PCICR(0x68) {           ; Pin Change Interrupt Control Register
		PCIE0 = 0               ; Pin Change Interrupt Enables bit 0
		PCIE1 = 1               ; Pin Change Interrupt Enables bit 1
		PCIE2 = 2               ; Pin Change Interrupt Enables bit 2
	}
	EICRA(0x69) {           ; External Interrupt Control Register
		ISC00 = 0               ; External Interrupt Sense Control 0 Bits bit 0
		ISC01 = 1               ; External Interrupt Sense Control 0 Bits bit 1
		ISC10 = 2               ; External Interrupt Sense Control 1 Bits bit 0
		ISC11 = 3               ; External Interrupt Sense Control 1 Bits bit 1
	}
	PCMSK0(0x6b) {          ; Pin Change Mask Register 0
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
		PCINT4 = 4              ; Pin Change Enable Masks bit 4
		PCINT5 = 5              ; Pin Change Enable Masks bit 5
		PCINT6 = 6              ; Pin Change Enable Masks bit 6
		PCINT7 = 7              ; Pin Change Enable Masks bit 7
	}
	PCMSK1(0x6c) {          ; Pin Change Mask Register 1
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
		PCINT4 = 4              ; Pin Change Enable Masks bit 4
		PCINT5 = 5              ; Pin Change Enable Masks bit 5
		PCINT6 = 6              ; Pin Change Enable Masks bit 6
	}
	PCMSK2(0x6d) {          ; Pin Change Mask Register 2
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
		PCINT4 = 4              ; Pin Change Enable Masks bit 4
		PCINT5 = 5              ; Pin Change Enable Masks bit 5
		PCINT6 = 6              ; Pin Change Enable Masks bit 6
		PCINT7 = 7              ; Pin Change Enable Masks bit 7
	}
	TIMSK0(0x6e) {          ; Timer/Counter0 Interrupt Mask Register
		TOIE0 = 0               ; Timer/Counter0 Overflow Interrupt Enable
		OCIE0A = 1              ; Timer/Counter0 Output Compare Match A Interrupt Enable
		OCIE0B = 2              ; Timer/Counter0 Output Compare Match B Interrupt Enable
	}
	TIMSK1(0x6f) {          ; Timer/Counter Interrupt Mask Register
		TOIE1 = 0               ; Timer/Counter1 Overflow Interrupt Enable
		OCIE1A = 1              ; Timer/Counter1 Output CompareA Match Interrupt Enable
		OCIE1B = 2              ; Timer/Counter1 Output CompareB Match Interrupt Enable
		ICIE1 = 5               ; Timer/Counter1 Input Capture Interrupt Enable
	}
	TIMSK2(0x70) {          ; Timer/Counter Interrupt Mask register
		TOIE2 = 0               ; Timer/Counter2 Overflow Interrupt Enable
		OCIE2A = 1              ; Timer/Counter2 Output Compare Match A Interrupt Enable
		OCIE2B = 2              ; Timer/Counter2 Output Compare Match B Interrupt Enable
	}

	TIMSK3(0x71) {          ; TIMSK3 - TC3 Interrupt mask register
		TOIE3 = 0              ; TC3 overflow interrupt enable bit
		OCIE3A = 1             ; TC3 output compare A match interrupt enable control bit
		OCIE3B = 2             ; TC3 output compare B match interrupt enable control bit
		OCIE3C = 3             ; TC3 output compare C match interrupt enable control bit
		ICIE3 = 5              ; TC3 input capture interrupt enable control bit
	}
	PCMSK3(0x73)
	PCMSK4(0x74)
	IVBASE(0x75)
	DIDR2(0x76)
	
	ADC(0x78, 0x79)         ; ADC Data Register  Bytes
	ADCSRA(0x7a) {          ; The ADC Control and Status register A
		ADPS0 = 0               ; ADC  Prescaler Select Bits bit 0
		ADPS1 = 1               ; ADC  Prescaler Select Bits bit 1
		ADPS2 = 2               ; ADC  Prescaler Select Bits bit 2
		ADIE = 3                ; ADC Interrupt Enable
		ADIF = 4                ; ADC Interrupt Flag
		ADATE = 5               ; ADC  Auto Trigger Enable
		ADSC = 6                ; ADC Start Conversion
		ADEN = 7                ; ADC Enable
	}
	ADCSRB(0x7b) {          ; The ADC Control and Status register B
		ADTS0 = 0               ; ADC Auto Trigger Source bits bit 0
		ADTS1 = 1               ; ADC Auto Trigger Source bits bit 1
		ADTS2 = 2               ; ADC Auto Trigger Source bits bit 2
		ACME = 6                ; 
	}
	ADMUX(0x7c) {           ; The ADC multiplexer Selection Register
		MUX0 = 0                ; Analog Channel and Gain Selection Bits bit 0
		MUX1 = 1                ; Analog Channel and Gain Selection Bits bit 1
		MUX2 = 2                ; Analog Channel and Gain Selection Bits bit 2
		MUX3 = 3                ; Analog Channel and Gain Selection Bits bit 3
		MUX3 = 4                ; Analog Channel and Gain Selection Bits bit 4
		ADLAR = 5               ; Left Adjust Result
		REFS0 = 6               ; Reference Selection Bits bit 0
		REFS1 = 7               ; Reference Selection Bits bit 1
	}
	ADCSRC(0x7d) {          ; ADC Control and status registers C
		ADTM = 0              ; Testing mode, internal reference voltage is output from AVREF port
		DIFS = 1              ; 0=ADC conversion from ADC multiplexer, 1=ADC conversion from internal differential amplifier
		SPD = 2               ; ADC high speed conversion mode (if set), only used for analog input with low resistance
		AMEN = 4              ; Channel auto monitoring enable (if set)
		SPN = 5               ; ADC conversion input polarity control, only used in detuning calibration. In normal mode it must be cleared
		OFEN	= 7              ; Enable detuning compensate (if set)
	}
	DIDR0(0x7e) {           ; Digital Input Disable Register
		ADC0D = 0               ; 
		ADC1D = 1               ; 
		ADC2D = 2               ; 
		ADC3D = 3               ; 
		ADC4D = 4               ; 
		ADC5D = 5               ; 
	}
	DIDR1(0x7f) {           ; Digital Input Disable Register 1
		AIN0D = 0               ; AIN0 Digital Input Disable
		AIN1D = 1               ; AIN1 Digital Input Disable
	}
	TCCR1A(0x80) {          ; Timer/Counter1 Control Register A
		WGM10 = 0               ; Waveform Generation Mode bit 0
		WGM11 = 1               ; Waveform Generation Mode bit 1
		COM1B0 = 4              ; Compare Output Mode 1B, bits bit 0
		COM1B1 = 5              ; Compare Output Mode 1B, bits bit 1
		COM1A0 = 6              ; Compare Output Mode 1A, bits bit 0
		COM1A1 = 7              ; Compare Output Mode 1A, bits bit 1
	}
	TCCR1B(0x81) {          ; Timer/Counter1 Control Register B
		CS10 = 0                ; Prescaler source of Timer/Counter 1 bit 0
		CS11 = 1                ; Prescaler source of Timer/Counter 1 bit 1
		CS12 = 2                ; Prescaler source of Timer/Counter 1 bit 2
		WGM11 = 3               ; Waveform Generation Mode bit 0
		WGM13 = 4               ; Waveform Generation Mode bit 1
		ICES1 = 6               ; Input Capture 1 Edge Select
		ICNC1 = 7               ; Input Capture 1 Noise Canceler
	}
	TCCR1C(0x82) {          ; Timer/Counter1 Control Register C
		FOC1B = 6               ; 
		FOC1A = 7               ; 
	}
	TCCR1D(0x83) {          ; TC1 Control register D 
		DSX10 = 0               ; 0 bit of TC1 trigger source selection control is enable
		DSX11 = 1               ; 1 bit of TC1 trigger source selection control is enable
		DAX14 = 4               ; 4 bit of TC1 trigger source selection control is enable
		DSX15 = 5               ; 5 bit of TC1 trigger source selection control is enable
		DSX16 = 6               ; 6 bit of TC1 trigger source selection control is enable
		DSX17 = 7               ; 7 bit of TC1 trigger source selection control is enable
	}

	TCNT1(0x84, 0x85)       ; Timer/Counter1
	ICR1(0x86, 0x87)        ; Timer/Counter1 Input Capture Register
	OCR1A(0x88, 0x89)       ; Timer/Counter1 Output Compare Register
	OCR1B(0x8a, 0x8b)       ; Timer/Counter1 Output Compare Register
	DTR1L(0x8c, 0x8d)       ; Dead-band register low byte of Timer1
	TCCR3A(0x90)            ; Control register A of Timer3
	TCCR3B(0x91)            ; Control register B of Timer3
	TCCR3C(0x92)            ; Control register C of Timer3
	TCCR3D(0x93)            ; Control register D of Timer3
	TCNT3(0x94, 0x95)       ; Counter register of Timer3
	ICR3(0x96, 0x97)        ; Input capture register of Timer3
	OCR3A(0x98, 0x99)       ; Compare output register of Timer3 A channel
	OCR3B(0x9a, 0x9b)       ; Compare output register of Timer3 B channel
	DTR3(0x9c, 0x9d)        ; Dead-band register of Timer3
	OCR3C(0x9e, 0x9f)       ; Compare output register of Timer3 C channel

	DACON(0xa0) {           ; DAC Control register 
		DAVS0 = 0            ; DAC reference voltage source selection bit 0
		DAVS1 = 1            ; DAC reference voltage source selection bit 1
		DAOE = 2             ; DAC output to external port enable control
		DACEN = 3            ; DAC enable control bit
	}
	DALR(0xa1)              ; DAC data register
	OFR0(0xa3)              ; ADC negative offset trimming
	OFR1(0xa4)              ; ADC positive offset trimming
	ADT0(0xa5, 0xa6)        ; ADC Auto-monitor Underflow threshold
	ADT1(0xaa, 0xab)        ; ADC Auto-monitor Overflow threshold
	ADMSC(0xac) {           ; ADC Monitoring channel status and control register 
		AMFC0 = 0            ; Auto-monitoring digital filter control bit
		AMFC1 = 1            ; Auto-monitoring digital filter control bit
		AMFC2 = 2            ; Auto-monitoring digital filter control bit
		AMFC3 = 3            ; Auto-monitoring digital filter control bit
		AMOF = 7             ; Auto-monitoring overflow event type flag bit (1=overflow, 0=underflow)
	}
	ADCSRD(0xad) {          ; ADC Control and status registers D
		VDS0 = 0             ; Voltage division circuit input source selection
		VDS1	= 1             ; Voltage division circuit input source selection
		VDS2	= 2             ; Voltage division circuit input source selection
		IVSEL0 = 3           ; Internal reference of output voltage selection
		IVSEL1 = 5           ; Internal reference of output voltage selection
		REFS2 = 6            ; In combination with REFS in ADMUX register, used to select reference voltage of ADC conversion, referring to definition of REFS in ADMUX.
		BGEN = 7             ; Internal reference globe control enable
	}
	IOCWK(0xae) {           ; PD Group level change wakeup control register 
		IOCD0 = 0            ; Write 1 to corresponding bit, enable wake up of IO pin level change of PD group
		IOCD1 = 1            ; Write 1 to corresponding bit, enable wake up of IO pin level change of PD group
		IOCD2 = 2            ; Write 1 to corresponding bit, enable wake up of IO pin level change of PD group
		IOCD3 = 3            ; Write 1 to corresponding bit, enable wake up of IO pin level change of PD group
		IOCD4 = 4            ; Write 1 to corresponding bit, enable wake up of IO pin level change of PD group
		IOCD5 = 5            ; Write 1 to corresponding bit, enable wake up of IO pin level change of PD group
		IOCD6 = 6            ; Write 1 to corresponding bit, enable wake up of IO pin level change of PD group
		IOCD7 = 7            ; Write 1 to corresponding bit, enable wake up of IO pin level change of PD group
	}
	DPS2R(0xaf) {           ; DPS2 Mode Control Register 
		TOS0 = 0             ; LPRC Timer Wake Up Configuration
		TOS1 = 1             ; LPRC Timer Wake Up Configuration
		LPRCE = 2            ; LPRC Enable Control
		DPS2E = 3            ; DPS2 Mode Enable Control
	}

	TCCR2A(0xb0) {          ; Timer/Counter2 Control Register A
		WGM20 = 0               ; Waveform Genration Mode bit 0
		WGM21 = 1               ; Waveform Genration Mode bit 1
		COM2B0 = 4              ; Compare Output Mode bits bit 0
		COM2B1 = 5              ; Compare Output Mode bits bit 1
		COM2A0 = 6              ; Compare Output Mode bits bit 0
		COM2A1 = 7              ; Compare Output Mode bits bit 1
	}
	TCCR2B(0xb1) {          ; Timer/Counter2 Control Register B
		CS20 = 0                ; Clock Select bits bit 0
		CS21 = 1                ; Clock Select bits bit 1
		CS22 = 2                ; Clock Select bits bit 2
		WGM22 = 3               ; Waveform Generation Mode
		FOC2B = 6               ; Force Output Compare B
		FOC2A = 7               ; Force Output Compare A
	}
	TCNT2(0xb2)             ; Timer/Counter2
	OCR2A(0xb3)             ; Timer/Counter2 Output Compare Register A
	OCR2B(0xb4)             ; Timer/Counter2 Output Compare Register B
	ASSR(0xb6) {            ; Asynchronous Status Register
		TCR2BUB = 0             ; Timer/Counter Control Register2 Update Busy
		TCR2AUB = 1             ; Timer/Counter Control Register2 Update Busy
		OCR2BUB = 2             ; Output Compare Register 2 Update Busy
		OCR2AUB = 3             ; Output Compare Register2 Update Busy
		TCN2UB = 4              ; Timer/Counter2 Update Busy
		AS2 = 5                 ; Asynchronous Timer/Counter2
		EXCLK = 6               ; Enable External Clock Input
	}
	TWBR(0xb8)              ; TWI Bit Rate register
	TWSR(0xb9) {            ; TWI Status Register
		TWPS0 = 0               ; TWI Prescaler bit 0
		TWPS1 = 1               ; TWI Prescaler bit 1
		TWS0 = 3                ; TWI Status bit 0
		TWS1 = 4                ; TWI Status bit 1
		TWS2 = 5                ; TWI Status bit 2
		TWS3 = 6                ; TWI Status bit 3
		TWS4 = 7                ; TWI Status bit 4
	}
	TWAR(0xba) {            ; TWI (Slave) Address register
		TWGCE = 0               ; TWI General Call Recognition Enable Bit
		TWA0 = 1                ; TWI (Slave) Address register Bits bit 0
		TWA1 = 2                ; TWI (Slave) Address register Bits bit 1
		TWA2 = 3                ; TWI (Slave) Address register Bits bit 2
		TWA3 = 4                ; TWI (Slave) Address register Bits bit 3
		TWA4 = 5                ; TWI (Slave) Address register Bits bit 4
		TWA5 = 6                ; TWI (Slave) Address register Bits bit 5
		TWA6 = 7                ; TWI (Slave) Address register Bits bit 6
	}
	TWDR(0xbb)              ; TWI Data register
	TWCR(0xbc) {            ; TWI Control Register
		TWIE = 0                ; TWI Interrupt Enable
		TWEN = 2                ; TWI Enable Bit
		TWWC = 3                ; TWI Write Collition Flag
		TWSTO = 4               ; TWI Stop Condition Bit
		TWSTA = 5               ; TWI Start Condition Bit
		TWEA = 6                ; TWI Enable Acknowledge Bit
		TWINT = 7               ; TWI Interrupt Flag
	}
	TWAMR(0xbd) {           ; TWI (Slave) Address Mask Register
		TWAM0 = 1               ; 
		TWAM1 = 2               ; 
		TWAM2 = 3               ; 
		TWAM3 = 4               ; 
		TWAM4 = 5               ; 
		TWAM5 = 6               ; 
		TWAM6 = 7               ; 
	}
	UCSRA(0xc0) {          ; USART Control and Status Register A
		MPCM = 0               ; Multi-processor Communication Mode
		U2X = 1                ; Double the USART transmission speed
		UPE = 2                ; Parity Error
		DOR = 3                ; Data overRun
		FE = 4                 ; Framing Error
		UDRE = 5               ; USART Data Register Empty
		TXC = 6                ; USART Transmitt Complete
		RXC = 7                ; USART Receive Complete
	}
	UCSRB(0xc1) {          ; USART Control and Status Register B
		TXB8 = 0               ; Transmit Data Bit 8
		RXB8 = 1               ; Receive Data Bit 8
		UCSZ2 = 2              ; Character Size
		TXEN = 3               ; Transmitter Enable
		RXEN = 4               ; Receiver Enable
		UDRIE = 5              ; USART Data register Empty Interrupt Enable
		TXCIE = 6              ; TX Complete Interrupt Enable
		RXCIE = 7              ; RX Complete Interrupt Enable
	}
	UCSRC(0xc2) {          ; USART Control and Status Register C
		UCPOL = 0              ; Clock Polarity
		UCSZ0 = 1              ; Character Size bit 0
		UCSZ1 = 2              ; Character Size bit 1
		USBS = 3               ; Stop Bit Select
		UPM0 = 4               ; Parity Mode Bits bit 0
		UPM1 = 5               ; Parity Mode Bits bit 1
		UMSEL0 = 6             ; USART Mode Select bit 0
		UMSEL1 = 7             ; USART Mode Select bit 1
	}
	UBRR(0xc4, 0xc5)        ; USART Baud Rate Register Bytes
	UDR(0xc6)               ; USART I/O Data Register

	VCAL(0xc8)              ; Internal Voltage Reference calibration register 
	VCAL3(0xcc)             ; Calibration value for 4.096V internal reference 
	VCAL1(0xcd)             ; Calibration value for 1.024V internal reference
	VCAL2(0xce)             ; Calibration value for 2.048V internal reference
	LDOCR(0xcf) {           ;
		VSEL0 = 0            ;
		VSEL1 = 1            ;
		VSEL2 = 2            ;
		PDEN = 3             ;
		WCE = 7              ;
	}
	DAPCR(0xdc) {           ; Differential amplifier control register 
		DPS0 = 0             ; Differential amplifier forward input source selection bit
		DPS1 = 1             ; Differential amplifier forward input source selection bit
		DNS0 = 2             ; Differential amplifier reverse input source selection bit
		DNS1 = 3             ; Differential amplifier reverse input source selection bit
		DNS2 = 4             ; Differential amplifier reverse input source selection bit
		GA0 = 5              ; Differential amplifier gain control
		GA1 = 6              ; Differential amplifier gain control
		DAPEN = 7            ; Differential amplifier enable
	}
	DAPTR(0xdd)             ;
	DAPTE(0xde)             ;
	HDR(0xe0) {             ; High-current Dirve port control Register 
		HDR0 = 0             ; PF5 output drive control; 1=80mA drive, 0=12mA drive
		HDR1 = 1             ; PF6 output drive control; 1=80mA drive, 0=12mA drive
		HDR2 = 2             ; PF1 output drive control; 1=80mA drive, 0=12mA drive
		HDR3 = 3             ; PF2 output drive control; 1=80mA drive, 0=12mA drive
		HDR4 = 4             ; PF4 output drive control; 1=80mA drive, 0=12mA drive
		HDR5 = 5             ; PF5 output drive control; 1=80mA drive, 0=12mA drive
	}
	OCPUE(0xe1) {           ;
		PUE0 = 0
		PUE1 = 1
		PUE2 = 2
		PUE3 = 3
		PUE4 = 4
		PUE5 = 5
		PUE6 = 6
		PUE7 = 7
	}
	PSSR(0xe2) {            ; TMR0/1/3 Prescaler selection register
		PSR1 = 0             ; Prescaler Selection Control bit
		PSR3 = 1             ; Prescaler Selection Control bit
		PSS3 = 6             ; Prescaler Selection Control bit
		PSS1 = 7             ; Prescaler Selection Control bit
	}
	TCKCSR(0xec) {          ; TC Clock control and status register
		TC2XS0 = 0	      ; TC high speed clock mode selection control bit 0
		TC2XS1 = 1           ; TC high speed clock mode selection control bit 1
		AFCKS = 2            ; 
		TC2XF0 = 4           ; TC High Speed Clock mode flag 0
		TC2XF1 = 5           ; TC High Speed Clock mode flag 1
		F2XEN = 6            ; RC 32M frequency doubling output enable control bit
	}
	PMX1(0xed) {            ; Port multiplexing control register 1
		C2AF6 = 0             ; OC2A Auxiliary output control (1=OC2A output to PF6, 0=OC2A output to PB3)
		C2BF7 = 1             ; OC2B Auxiliary output control (1=OC2B output to PF7, 0=OC2B output to PD3)
		C3AC = 2              ; OC3A Auxiliary output control (1=OC3A output to QFP48/AC0P, 0=OC3A output to PF1)
	}
	PMX0(0xee) {            ; Port multiplexing control register 0
		RXD5 = 0              ; Serial port RXD Auxiliary output (1=RXD input from PD5, 0=RXD input from PD0)
		TXD6 = 1              ; Serial port TXD Auxiliary output (1=TXD output to PD6, 0=TXD output to pd1)
		SSB1 = 2              ; SPSS Auxiliary output control (1=SPSS output to PB1, 0=SPSS output to PB2)
		C0AC0 = 3             ; OC0A Auxiliary output control
		C0BF3 = 4             ; OC1B Auxiliary output control (1=OC0B output to PF3, 0=OC0B output to PD5)
		C1AF5 = 5	            ; OC1A Auxiliary output control (1=OC1A output to PF5, 0=OC1A output to PB1)
		C1BF4 = 6             ; OC1B Auxiliary output control (1=OC1B output to PF4, 0=OC1B output to PB2)
		WCE = 7               ; PMX0/1 update enable; before update, must write logic one to WCE, in the following 6 system clock update will be finished.
	}
	PMX2(0xf0) {            ; Port multiplexing control register 2
		C6EN = 0              ; By default PC6 pin is taken as reset, write logic one to this bit to disable external reset, than PC6 is used as normal I/O
		E6EN = 1              ; By default PE6 is taken as analog input, write logic one to this bit to disable analog input, than this pin can be used as GPIO
		XIEN = 2              ; External clock input enable control
		STOSC0 = 5            ; Low speed oscillator enable control
		STOSC1 = 6            ; High speed oscillator enable control
		WCE = 7               ; IOCR value change enable bit
	}
	PMCR(0xf2) {            ; PMCR - Clock Source register
		RCMEN = 0	            ; Internal 32 MHz RC Oscillator enable control, 1 enable, 0 disable
		RCKEN = 1             ; Internal 32 KHz RC Oscillator enable control, 1 enable, 20 disable
		OSCMEN = 2            ; External high frequency (0.4 - 32 MHz) crystal oscillator  enable control, 1 enable, 0 disable 
		OSCKEN = 3            ; External low frequency (32-400 KHz) crystal oscillator enable control, 1 enable, 0 disable
		WCLKS = 4             ; WDT Clock source choices. 0-Internal 32MHz HFRC oscillator 16 frequency division, 1-Internal 32KHz LFRC oscillator
		CLKSS = 5             ; Master clock source choice, for clock source type, referring to section of clock source
		CLKFS = 6             ; Master source frequency control, for clock frequency contro, referring to section of clock source
		PMCE = 7              ; PMCR Register Change Enable bit, this bit must be set firstly before other bits. The other bits value should be set within 4 cycles.
	}

	GUID0(0xf3)             ; read only. GUID3-0 is unique 4-byte serial number for each chip LGT8F328P
	GUID1(0xf4)             ; read only. GUID3-0 is unique 4-byte serial number for each chip LGT8F328P
	GUID2(0xf5)             ; read only. GUID3-0 is unique 4-byte serial number for each chip LGT8F328P
	GUID3(0xf6)             ; read only. GUID3-0 is unique 4-byte serial number for each chip LGT8F328P
}

